@model IEnumerable<InternetStore.Models.Product>

@section scripts
{
    <script>
        $('#Search').on('keyup paste',
            function () {
                console.log($(this).val());
                var obj = {
                    searchName: $(this).val()
                };
                $.ajax({
                    type: 'POST',
                    url: '/Products/Search',
                    data: JSON.stringify(obj),
                    contentType: 'application/json; charset=UTF-8',
                    success: function (response) {
                        console.log(response);
                        var trHtml = response.map(function (el) {
                            return createTr(el);
                        }).join("");
                        $('#ourtable tbody').html(trHtml);
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            });

        
        function createTr(product) {
            return '<tr><th>' +
                product.Name + '</th><th>' + product.Price + '</th><th>' + product.Category + '</th><td>' +
                '</th><td> <a href="/Products/Buy/' +
                product.Id +
                '">Buy</a> |<a href="/Products/Edit/' +
                product.Id +
                '">Edit</a> |<a href="/Products/Details/' +
                product.Id +
                '">Details</a> |<a href="/Products/Delete/' +
                product.Id +
                '">Delete</a> </td></tr>';

        }

      
    </script>

    <script>
        $(document).ready(function () {
            $('#theme').change(function () {
                var obj = {
                    searchName: $(this).val()
                };
                $.ajax({
                    type: 'POST',
                    url: '/Products/CategorySearch',
                    data: JSON.stringify(obj),
                    contentType: 'application/json; charset=UTF-8',
                    success: function (response) {
                        console.log(response);
                        var newHtml = response.map(function (el) {
                            return createPr(el);
                        }).join("");
                        $('#ourtable tbody').html(newHtml);
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            });

        });



            function createPr(product) {
                return '<tr><th>' +
                    product.Name + '</th><th>' + product.Price + '</th><th>' + product.Category + '</th><td>' +
                    '</th><td> <a href="/Products/Buy/' +
                    product.Id +
                    '">Buy</a> |<a href="/Products/Edit/' +
                    product.Id +
                    '">Edit</a> |<a href="/Products/Details/' +
                    product.Id +
                    '">Details</a> |<a href="/Products/Delete/' +
                    product.Id +
                    '">Delete</a> </td></tr>';

            }

           

    </script>
}


@{
    ViewBag.Title = "Выбор товара";
}

<h2>Поиск товара</h2>

<input class="form-control" style="margin: 10px" id="Search" name="Search" type="text" />



<select style="margin: 10px" name="theme" id="theme">
    @foreach (var item in Model)
    {
    <option>@item.Category</option>
    }
</select>

<tbody class="table" id="ourtable">
    
    <tbody class="table">
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table" id="ourtable">
        
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.ActionLink("Купить", "Buy", new { id = item.Id }) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
